Prequesits:
üîπ 1. Jenkins Setup (on AWS EC2)

  1.1 Launch an EC2 instance (Ubuntu/Debian recommended).
  1.2 Install Jenkins:

Jenkins Setup (on AWS EC2)
```
 sudo apt update
sudo apt install -y openjdk-11-jdk
wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt update
sudo apt install -y jenkins
sudo systemctl start jenkins
```
  1.3.Open port 8080 in EC2 Security Group.

  1.4.Access Jenkins at http://<EC2-Public-IP>:8080.

  1.5.Install recommended plugins and setup admin user.


üîπ 2. Create Jenkins Pipeline Job
   
   2.1 In Jenkins UI: New Item ‚Üí Pipeline ‚Üí OK
   2.2 Scroll to "Pipeline Script" and paste this:

```
  pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "your-dockerhub-username/jenkins-flask-app"
        EC2_HOST = "ec2-user@<app-ec2-ip>"
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE ./app'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sh 'scp ./scripts/deploy.sh $EC2_HOST:/home/ec2-user/deploy.sh'
                sh 'ssh $EC2_HOST "bash deploy.sh $DOCKER_IMAGE"'
            }
        }
    }
}
```


üîê Jenkins Secrets Needed

   - In Jenkins, go to Manage Jenkins ‚Üí Credentials:

   -  Add a Docker Hub username/password with ID: dockerhub-creds

   - (Optional) Add EC2 SSH private key if needed for access



‚úÖ Features

   - Dockerized web app with version-controlled code

   - Jenkins pipeline with build, test (optional), and deploy stages

   - Auto deployment to EC2

   - Uses Docker Hub as image registry


